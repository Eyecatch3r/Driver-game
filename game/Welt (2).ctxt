#BlueJ class context
comment0.target=Welt
comment0.text=\r\n\ Ein\ Objekt\ der\ Klasse\ Welt\ verwaltet\ eine\ Liste\ von\ Akteur-Objekten.\ \r\n\ \r\n\ @author\ Gerd\ Heischkamp\r\n
comment1.params=pBreite\ pHoehe
comment1.target=Welt(int,\ int)
comment1.text=\r\n\ Konstruktor\ der\ Klasse\ Welt.\r\n\ \r\n\ @param\ pBreite\ Breite\ der\ Welt\r\n\ @param\ pHoehe\ Hoehe\ der\ Welt\r\n
comment10.params=
comment10.target=java.awt.Color\ gibHintergrundFarbe()
comment10.text=\r\n\ Liefert\ die\ Hintergrundfarbe\ der\ Welt.\ Nur\ sichtbar,\ wenn\ kein\ Hintergrundbild\ gewaehlt\ ist.\r\n
comment11.params=
comment11.target=java.awt.image.BufferedImage\ gibVordergrundBild()
comment11.text=\r\n\ Liefert\ das\ Vordergrundbild\ der\ Welt.\r\n\ \r\n\ @return\ Vordergrundbild\ der\ Welt\r\n
comment12.params=pVordergrundBild
comment12.target=void\ setzeVordergrundBild(java.awt.image.BufferedImage)
comment12.text=\r\n\ Setzt\ das\ Vordergrundbild\ der\ Welt.\ Dieses\ kann\ f\u00FCr\ Einblendungen\ genutzt\ werden.\r\n\ \r\n\ @param\ pVordergrundBild\ Vordergrundbild\ der\ Welt\r\n
comment13.params=
comment13.target=java.awt.image.BufferedImage\ gibHintergrundBild()
comment13.text=\r\n\ Liefert\ das\ Hintergrundbild\ der\ Welt.\r\n\ \r\n\ @return\ Hintergrund\ der\ Welt\r\n
comment14.params=pHintergrundBild
comment14.target=void\ setzeHintergrundBild(java.awt.image.BufferedImage)
comment14.text=\r\n\ Setzt\ das\ Hintergrundbild\ der\ Welt.\r\n\ \r\n\ @param\ pHintergrundBild\ Hintergrundbild\ der\ Welt\r\n
comment15.params=pPfadZurDatei
comment15.target=void\ setzeHintergrundBild(java.lang.String)
comment15.text=\r\n\ Setzt\ das\ Hintergrundbild\ der\ Welt.\r\n\ \r\n\ @param\ pPfadZurDatei\ Pfad\ zum\ Hintergrundbild\ der\ Welt\r\n
comment16.params=pVarargsKlassenfilter
comment16.target=abiturklassen.datenstrukturklassen.linear.List\ gibAkteure(java.lang.Class[])
comment16.text=\r\n\ Liefert\ eine\ Liste\ (Kopie)\ der\ Akteure,\ die\ in\ der\ Welt\ existieren,\ ggf.\ nach\ Klassen\ gefiltert.\r\n\ \r\n\ @param\ pVarargsKlassenfilter\ Klassen,\ nach\ denen\ gefiltert\ die\ Liste\ ausgegeben\ werden\ soll\r\n
comment17.params=pAkteur
comment17.target=void\ akteurEinfuegen(Akteur)
comment17.text=\r\n\ Fuegt\ einen\ Akteuer\ in\ die\ Liste\ der\ Akteure\ ein,\ die\ in\ der\ Welt\ existieren.\r\n\ \r\n\ @param\ pAkteur\ Einzufuegender\ Akteur\r\n
comment18.params=pAkteur
comment18.target=void\ akteurEntfernen(Akteur)
comment18.text=\r\n\ Loescht\ einen\ Akteur\ aus\ der\ Liste\ der\ Akteure,\ die\ in\ der\ Welt\ existieren.\r\n\ \r\n\ @param\ pAkteur\ Zu\ loeschender\ Akteur\r\n
comment19.params=g
comment19.target=void\ update(java.awt.Graphics)
comment19.text=\r\n\ Ueberschreibt\ die\ Methoder\ der\ Oberklasse.\ Das\ Bild\ wird\ neu\ gezeichnet.\r\n
comment2.params=pBreite\ pHoehe\ pPfadZurBilddatei
comment2.target=Welt(int,\ int,\ java.lang.String)
comment2.text=\r\n\ Konstruktor\ der\ Klasse\ Welt.\r\n\ \r\n\ @param\ pBreite\ Breite\ der\ Welt\r\n\ @param\ pHoehe\ Hoehe\ der\ Welt\r\n\ @param\ pPfadZurBilddatei\ Pfad\ zur\ Bilddatei\r\n
comment20.params=g
comment20.target=void\ paint(java.awt.Graphics)
comment20.text=\r\n\ Ueberschreibt\ die\ Methode\ der\ Oberklasse.\ Das\ Bild\ wird\ neu\ gezeichnet.\r\n
comment21.params=g
comment21.target=void\ zeichneWelt(java.awt.Graphics)
comment21.text=\r\n\ Zeichnet\ die\ Welt\ und\ alle\ Akteuer,\ die\ in\ der\ Welt\ existieren.\r\n
comment22.params=arg0
comment22.target=void\ componentHidden(java.awt.event.ComponentEvent)
comment22.text=\r\n\ ComponentListener-Interface-Methode\:\ leer.\r\n
comment23.params=arg0
comment23.target=void\ componentMoved(java.awt.event.ComponentEvent)
comment23.text=\r\n\ ComponentListener-Interface-Methode\:\ leer.\r\n
comment24.params=arg0
comment24.target=void\ componentResized(java.awt.event.ComponentEvent)
comment24.text=\r\n\ ComponentListener-Interface-Methode\:\ Die\ Zeichenflaeche\ wird\ an\ die\ neue\ Weltgroesse\ angepasst.\r\n
comment25.params=arg0
comment25.target=void\ componentShown(java.awt.event.ComponentEvent)
comment25.text=\r\n\ ComponentListener-Interface-Methode\:\ leer.\r\n
comment3.params=pBreite\ pHoehe\ pBgColor
comment3.target=Welt(int,\ int,\ java.awt.Color)
comment3.text=\r\n\ Konstruktor\ der\ Klasse\ Welt.\r\n\ \r\n\ @param\ pBreite\ Breite\ der\ Welt\r\n\ @param\ pHoehe\ Hoehe\ der\ Welt\r\n\ @param\ pBgColor\ Farbe\ des\ Hintergrundes\r\n
comment4.params=
comment4.target=void\ initialisiereWelt()
comment4.text=\r\n\ Die\ Methode\ wird\ automatisch\ aufgrufen,\ wenn\ ein\ Welt-Objekt\ erzeugt\ wird.\ Hier\ k\u00F6nnen\ \r\n\ Initialisierungen\ vorgenommen\ werden.\r\n
comment5.params=
comment5.target=void\ agiere()
comment5.text=\r\n\ Die\ Methode\ wird\ bei\ jedem\ Zyklus\ der\ Handlungsschleife\ aufgerufen,\ bevor\ die\ entsprechende\r\n\ agiere-Methode\ der\ Akteur-Objekte\ aufgerufen\ wird.\r\n
comment6.params=
comment6.target=void\ loop()
comment6.text=\r\n\ Die\ Methode\ wird\ in\ einer\ Schleife\ aufgerufen,\ wodurch\ vom\ Welt-Objekt\ und\ den\ Akteur-Objekte\r\n\ die\ agiere-Methoden\ aufgerufen\ werden.\r\n
comment7.params=
comment7.target=int\ gibBreite()
comment7.text=\r\n\ Liefert\ die\ Breite\ der\ Welt.\r\n\ \r\n\ @return\ Breite\ der\ Welt\r\n
comment8.params=
comment8.target=int\ gibHoehe()
comment8.text=\r\n\ Liefert\ die\ Hoehe\ der\ Welt.\r\n\ \r\n\ @return\ Hoehe\ der\ Welt\r\n
comment9.params=pHintergrundfarbe
comment9.target=void\ setzeHintergrundFarbe(java.awt.Color)
comment9.text=\r\n\ Setzt\ die\ Hintergrundfarbe\ der\ Welt.\ Nur\ sichtbar,\ wenn\ kein\ Hintergrundbild\ gewaehlt\ ist.\r\n\ \r\n\ @param\ pHintergrundfarbe\ Farbe\ des\ Hintergrundes\r\n
numComments=26
